z <- seq(-2,2,0.1)
plot(z,fz(z))
fz(z)
z <- seq(-2,2,0.1)
fzval <- NULL
for (zval in z) {
fzval <- c(fzval,fz(zval))
}
plot(z,fzval)
z
fzval
fz(-2)
fz <- function(z) {
if (z< -1) {
f <- 0.0
}
if ((z>=-1)&(z<1)) {
f <- 0.5+0.5*z
}
if (z>=1) {
f <- 1
}
return(f)
}
fz(-2)
z <- seq(-2,2,0.1)
fzval <- NULL
for (zval in z) {
fzval <- c(fzval,fz(zval))
}
plot(z,fzval)
fy <- function(y) {
if (y< 0) {
f <- 0.0
}
if ((y>=0)&(y<1)) {
f <- 0.5+0.5*y
}
if (y>=1) {
f <- 1
}
return(f)
}
y <- seq(-2,2,0.1)
fyval <- NULL
for (yval in y) {
fyval <- c(fyval,fy(yval))
}
plot(y,fyval)
fz <- function(z) {
if (z< -1) {
f <- 0.0
}
if ((z>=-1)&(z<1)) {
f <- 0.5+0.5*z
}
if (z>=1) {
f <- 1
}
return(f)
}
z <- seq(-2,2,0.1)
fzval <- NULL
for (zval in z) {
fzval <- c(fzval,fz(zval))
}
plot(z,fzval)
fy <- function(y) {
if (y< 0) {
f <- 0.0
}
if ((y>=0)&(y<1)) {
f <- 0.5+0.5*y
}
if (y>=1) {
f <- 1
}
return(f)
}
y <- seq(-2,2,0.1)
fyval <- NULL
for (yval in y) {
fyval <- c(fyval,fy(yval))
}
plot(y,fyval)
12:3
pi
0:pi
pi:0
2/3:3*2
4/2:8/2
2:4
(4/2:8)/2
(2:8)/2
(4/2:8)/2
4/2:8/2
c(FALSE,0,TRUE)
c(FALSE,0,TRUE,"we")
c(3, 25, 40, 50, 60, 75, 90) %between% c(20, 55)
4/2:8/2
4/(2:8)
clear
c(1,2,2) < c(2,2,3)
c(1,2,2) < c(1,3,3)
xor(c(1,2,2) < c(2,2,3), c(1,2,2) < c(1,3,3))
a <- c(2,4)
b <- c(5,6)
a<b
all(a<b)
b <- c(5,-6)
a<b
all(a<b)
any(a<b)
?count.fields
x <- c(2,4,1,3,66,-334,-21,435.0)
class(x)
typeof(x)
seq_along(x)
rep(1:4,c(3,5))
rep(1:4,c(3,5,1,2))
rep(1:4,each=1:4
)
rep(1:4,each=1:4)
rep(1:4,each=4)
rep(1:4,times=1:4)
rep(1:4,each=4,length.out=23)
x
x
-3
x[-3]
x[88]
V1 <- c(3,5,22,8)
V1>6
which(V1>6)
which(c(FALSE,TRUE,FALSE,FALSE,TRUE,FALSE))
V5 <- c(a=2,b=5,ende=27)
V5
V5[c("a","ende","b")]
V5[c("a","ende","bbbb")]
v1 <- 1:10
v2 <- 10:1
v1<v2
(1:10)v1<v2
(1:10)[v1<v2]
which[v1<v2]
which(v1<v2)
exam1 <- data.frame(Var1=3:6,Var2=c(1,3,5,2),Var3=c(8,8,1,7))
exam1
lapply(exam1,median)
sapply(exam1,median)
tapply(exam1,median)
mapply(exam1,median)
?mapply
lapply(exam1,mean)
sapply(exam1,mean)
exam1
(3+4+5+6)/4
(1+3+5+2)/4
(8+8+1+7)/4
str(ff <- factor(c("blue", "yellow", "blue", "red", "blue", "red")))
ff
oldlev <- levels(ff)
newlev <- c("blau","rot","gelb")
levels(ff) <- newlev
ff
c(1,2)+1:6
x <- c("aa"=1:3 , "bb"=4:6)
x
x <- c("aa"=1 , "bb"=46)
x
factor(rep(1:5,2))
ordered(factor(rep(1:5,2)))
x <- factor(rep(1:5,2))
x
ordered(x)
rep(1:5,2)
ordered(rep(1:5,2))
class(ordered(rep(1:5,2)))
typeof(ordered(rep(1:5,2)))
class(factor(rep(1:5,2)))
str(ff <- factor(c("blue", "yellow", "blue", "red", "blue", "red")))
str(ff <- factor(c("blue", "yellow", "blue", "red", "blue", "red")))
ff
oldlev <- levels(ff)
newlev <- c("blau","rot","gelb")
levels(ff) <- newlev
ff
class(factor(rep(1:5,2)))
levels(factor(rep(1:5,2)))
levels(ordered(rep(1:5,2)))
ordered(rep(1:5,2))
levels(ordered(rep(1:5,2)))
ordered(rep(1:5,2))
levels(ordered(rep(1:5,2)))
ffn <- ordered(c(10, 100, 10, 1000, 10))
ffn
as.numeric(ffn)
typeof(ffn)
ffn <- factor(c(10, 100, 10, 1000, 10))
as.numeric(ffn)
typeof(ffn)
ffn <- ordered(c(10, 100, 10, 1000, 10))
as.numeric(ffn)
typeof(ffn)
ffn <- factor(c(10.1, 100.1, 10.1, 1000.1, 10.1))
as.numeric(ffn)
typeof(ffn)
typeof(10.1)
ffn <- factor(c("aa","bb","aa","cc","aa"))
as.numeric(ffn)
typeof(ffn)
ffn <- factor(c("aa","bb","aa","cc","aa"))
typeof(ffn)
as.numeric(ffn)
ffn <- factor(c(10, 100, 10, 1000, 10))
as.numeric(as.character(ffn))
system.time(8+3)
?rnomr
?rnorm
rnorm(8)
system.time(mean(rnorm(80000)))
system.time(1*2*3*4*5*6*7*8*9*10*11*12*13*14*15*16*17*18)
1*2*3*4*5*6*7*8*9*10*11*12*13*14*15*16*17*18
mean(1:1*2*3*4*5*6*7*8*9*10*11*12*13*14*15*16*17*18)
mean(1:(1*2*3*4*5*6*7*8*9*10*11*12*13*14*15*16*17*18))
1:5*2*3
Vt1 <- rep(3:9, 100000)
rep(3:9, 4)
Vt1 <- rep(3:9, 100000)
Vt2 <- Vt1
system.time(Vt2[Vt1 > 6] <- Vt2[Vt1 > 6] - 5)
system.time(Vt2[Vt1 > 6] <- Vt2[Vt1 > 6] - 5)
system.time(Vt2[Vt1 > 6] <- Vt2[Vt1 > 6] - 5)
system.time(Vt2[Vt1 > 6] <- Vt2[Vt1 > 6] - 5)
system.time(Vt2[Vt1 > 6] <- Vt2[Vt1 > 6] - 5)
ll <- list(l=list("a", "old"), v=c(2,-100), s="s")
l1
ll
ll[[1]]
ll[[1]][[1]]
ll[[1]][[2]]
ll[[2]]
ll[[2]][[1]]
ll[[2]][1]
ll[[2]][2]
ll[[2]][[2]]
ll <- list(l=list("a", "old"), v=c(2,-100), s="s")
ll[[2]][[2]][[8]]
ll[[2]][2]
ll[[1]]
ll$l
ll$v
ll$s
ll <- list(l=list(aa="a", bb="old"), v=c(2,-100), s="s")
ll$l
ll$l$aa
ll$l$bb
ll[[1]]
ll$l$bb
rep(ll,2)
c(ll,7)
ll
ll[1]
ll[[1]]
ll[2]
ll[[2]]
ll
ll[["v"]]
attributes(c(1:16))
attributes(6
)
attributes(factor(c(1:16)))
(4+2)/2
4+2/2
matrix(1:25,nrow=5)
A <- matrix(1:25,nrow=5)
length(A)
dim(A)
?matrix
?array
paste0("R", 1:2)
A1 <- array(1:8,dim=c(2,2,2),dimnames=list(rows=paste0("R", 1:2),columns=paste0("C", 1:2), pages=paste0("P", 1:2)))
A1
?matrix
?array
array(1:8,dim=c(2,2,2))
array(1:12,dim=c(2,2,3))
array(1:16,dim=c(2,2,2,2))
matrix(1:8,nrow = 2)
t(matrix(1:8,nrow = 2))
A1
A1 <- array(1:8,dim=c(2,2,2),dimnames=list(rows=paste0("R", 1:2),columns=paste0("C", 1:2), pages=paste0("P", 1:2)))
A1
aperm(A1, c(2,1,3))
A1
aperm(A1, c(1,2,3))
A1
aperm(A1, c(1,2,3))
aperm(A1, c(2,1,3))
aperm(A1, c(1,3,2))
A1
aperm(A1, c(1,3,2))
attributes(A1)
A1$dimnames
A1$dimnames$rows
dimnames(A1)
dimnames(A1)$rows
?attr
attributes(A1)
attr(A1)
attr(A1,c(1,2))
attr(A1,c(1,0))
attributes(A1)
dimnames(A1)
dimnames(A1)$rows
A1 <- array(1:8,dim=c(2,4))
A1
A1
rbind(A1,2*(9:12))
2*9:12
2*(9:12)
2:8/2
(2:8)/2
2:(8/2)
4/2:8/2
4/2:8
A1 <- array(1:8,dim=c(2,4))
A1
rbind(A1,2*(9:12))
cbind(A1,2*(9:11))
A1 <- array(1:8,dim=c(2,4))
A1
rbind(A1,2*(9:12))
cbind(A1,2*(9:10))
matrix(1:6, nrow=2,dimnames=list(c("R1", "R2"), c("C1", "C2", "C3")))
rbind(one=1:4, two=11:14)
B <- rbind(one=1:4, two=11:14)
B
B <- rbind(1:4, 11:14, 7:10)
B
B[1,1]
B[1,2]
B[3,2]
B[3:4,2]
B[2:3,2]
B[2:3,2:4]
Titanic
B
colSums(B)
rowSums(B)
B
apply(B,1,sum)
apply(B,1,mean)
apply(B,1,function(obj) obj/sum(obj))
x <- 1:4
x/sum(x)
x
B
B
apply(B,1,function(obj) 1:max(obj)
)
matrix(1:12,3,4)
matrix(1:12,3,4) * 1:3
matrix(1:12,3,4) * 1:4
matrix(1:12,3,4) * 1:5
B
B
diag(B)
sumfunc <- function(a,b) a+b
sumfunc(8,4)
curve(square(x, a=1, b=2), n=21)
plotab <- function(a, b) curve(square(x, a=a, b=b), n=21)
plotab(8,3)
plotab <- function(a, b) curve(x, n=21)
plotab(1,1)
?curve
curve(2*x+1)
curve(2*x+1,n=21)
curve(x,n=21)
curve(2*x,n=21)
curve(1*x,n=21)
match(1,4)
match(1,1:10)
match(2,1:10)
match(2,c(3,5,2,1,8))
grep("re",c("tzu","read","drea"))
match("re",c("tzu","read","drea"))
match("read",c("tzu","read","drea"))
match(c(2,8),c(3,5,2,1,8))
match(c(2,8),c(3,5,2,1,8,2))
match("re",c("tzu","read","drea"))
pmatch("re",c("tzu","read","drea"))
pmatch("re",c("tzu","read","re","drea"))
grep("re",c("tzu","read","re","drea"))
grep(("re","zu"),c("tzu","read","re","drea"))
grep(c("re","zu"),c("tzu","read","re","drea"))
matrix(1:30,10,3)
A <- matrix(1:30,10,3)
rowMeans(A)
rowMeans(A)1/
1/rowMeans(A)
1/11
swiss
linmod <-lm(Fertility ~ Education, data=swiss
)
summary(linmod)
confint(linmod)
attributes(linmod)
linmod$coefficients
coef(linmod)
sm <- summary(linmod)
attributes(sm)
sm
linmod$coefficients
sm$coefficients
sm$coefficients[2,2]
sm$df
sm$coefficients[2,1]
b <- Inf
2 < b
2 > b
2/12:9*3
(2/11)*3
(2/10)*3
(2/9)*3
list()
?list()
matrix(1:20,4,5)
matrix(1:20,nrow=4)
?matrix()
matrix(1:20,nrow=4) * 1:4
matrix(1:20,nrow=4) * 1:5
matrix(1:20,nrow=4) * 1:6
which(c(TRUE,FALSE,TRUE))
grep("we",c("aswer","qe4w"))
grep("we",c("aswer","qe4w","ghwe4r"))
match("we",c("aswer","qe4w","ghwe4r"))
match("aswer",c("aswer","qe4w","ghwe4r"))
match("we",c("aswer","qe4w","ghwe4r"))
pmatch("we",c("aswer","qe4w","ghwe4r"))
pmatch("we",c("wer","qe4w","ghwe4r"))
grep("we",c("wer","qe4w","ghwe4r"))
match(c("we","st"),c("aswer","we","ghwe4r","st"))
grep("we",c("wer","qe4w","ghwe4r","we"))
match(c("we","st"),c("aswer","we","ghwe4r","st","we"))
match("we",c("wer","qe4w","ghwe4r","we"))
match("we",c("we","qe4w","ghwe4r","we"))
match("we",c("we","qe4w","st","ghwe4r","st","we"))
match(c("we","st") ,c("we","qe4w","st","ghwe4r","st","we"))
A
A <- matrix(1:12,4,3)
A
rowSums(A)
apply(A,1,sum)
apply(A,1,function(obj) sum(obj))
?read.csv
datafile <- data.frame(x=x,y=x*x)
x <- 1:10
datafile <- data.frame(x=x,y=x*x)
datafile
plot(y~x , data = datafile , type = "n" , ann = FALSE, axes = FALSE)
lines(x,y)
lines(x,x*x)
?points()
points(c(2,2),c(4,4))
points(c(7,7),c(49,49))
axis(side=1)
axis(side=2)
points(c(7,10),c(49,60))
points(c(7,10,10),c(49,60,70))
box()
?abline
vline(2)
?vline
?abline
y <- matrix(rpois(20000,0.5),nrow=1000)
ybars <- rowMeans(y)
s2 <- apply(y,1,var)
ddybars <- density(ybars)
plot(ddybars)
dds2 <- density(s2)
xlim <- range(c(ddybars$x,dds2$x))
ylim <- range(c(ddybars$y,dds2$y))
plot(ddybars,xlim=xlim,ylim=ylim)
lines(dds2,col="blue")
ddybars
ddybars$x
reader
1:2*1:8
-1:2
1:2*(-1)*2
1:2*(-1):2
matrix((1:12)*(1:2) , nrow=2)
matrix((1:12)*(1:12) , nrow=2)
sapply(0:3 , function(k) choose(3,k))
sapply(0:4 , function(k) choose(4,k))
sapply(0:5 , function(k) choose(5,k))
sapply(0:2 , function(k) choose(2,k))
matrix((1:12)*(1:12) , nrow=2)
M1[5]
M1 <- matrix((1:12)*(1:12) , nrow=2)
M1[5]
M1[,5]
M1[5,]
colSums(M1)[2:3]
M1[5,]
M1[,5]
setwd("/home/kbhaskar/CO2ONLINE/co2online_github/02dataRimages")
list.files()
load("MFH20022018.RData")
names(MFH20022018.RData)
names(MFH20022018)
